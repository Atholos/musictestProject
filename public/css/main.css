/*! HTML5 Boilerplate v5.3.0 | MIT License | https://html5boilerplate.com/ */

/*
 * What follows is the result of much research on cross-browser styling.
 * Credit left inline and big thanks to Nicolas Gallagher, Jonathan Neal,
 * Kroc Camen, and the H5BP dev community and team.
 */

/* ==========================================================================
   Base styles: opinionated defaults
   ========================================================================== */

html {
    color: #222;
    font-size: 1em;
    line-height: 1.4;
}

/*
 * Remove text-shadow in selection highlight:
 * https://twitter.com/miketaylr/status/12228805301
 *
 * These selection rule sets have to be separate.
 * Customize the background color to match your design.
 */

::-moz-selection {
    background: #b3d4fc;
    text-shadow: none;
}

::selection {
    background: #b3d4fc;
    text-shadow: none;
}

/*
 * A better looking default horizontal rule
 */

hr {
    display: block;
    height: 1px;
    border: 0;
    border-top: 1px solid #ccc;
    margin: 1em 0;
    padding: 0;
}

/*
 * Remove the gap between audio, canvas, iframes,
 * images, videos and the bottom of their containers:
 * https://github.com/h5bp/html5-boilerplate/issues/440
 */

audio,
canvas,
iframe,
img,
svg,
video {
    vertical-align: middle;
}

/*
 * Remove default fieldset styles.
 */

fieldset {
    border: 0;
    margin: 0;
    padding: 0;
}

/*
 * Allow only vertical resizing of textareas.
 */

textarea {
    resize: vertical;
}

/* ==========================================================================
   Browser Upgrade Prompt
   ========================================================================== */

.browserupgrade {
    margin: 0.2em 0;
    background: #ccc;
    color: #000;
    padding: 0.2em 0;
}

/* ==========================================================================
   Author's custom styles
   ========================================================================== */

.article img {
    object-fit: cover;
}

#map {
    position: absolute;
    top: 0;
    right: 0;
    height: 100px;
    width: 20%;
    transition: width 1s, height 1s;
}

#map:hover {
    height: 300px;
    width: 60%;
}

.modal {
    position: fixed;
    top: 1rem;
    background-color: #FFF;
    width: 80%;
    margin-left: 10%;
    box-shadow: #999 0px 0px 18px;
    border-radius: 4px;
}

.modal button {
    position: absolute;
    right: 1rem;
    top: 1rem;
}

.modal h4 {
    padding: 1rem;
}

.modal figure {
    position: relative;
    padding: 0 0 2rem 0;
}

img {
    width: 100%;
}

main {
    display: flex;
    flex-wrap: wrap;
    margin-top: 100px;
}

article {
    cursor: pointer;
    width: calc(100% / 3 - 6rem);
    padding: 1rem;
    margin: 0 2rem;
}

button {
    background-color: #b3d4fc;
    border: 0;
    line-height: 2em;
    padding: 0 1em;
    border-radius: 4px;
    margin: 1rem;
}

/* ==========================================================================
   Helper classes
   ========================================================================== */

/*
 * Hide visually and from screen readers
 */

.hidden {
    display: none !important;
}

/*
 * Hide only visually, but have it available for screen readers:
 * http://snook.ca/archives/html_and_css/hiding-content-for-accessibility
 */

.visuallyhidden {
    border: 0;
    clip: rect(0 0 0 0);
    height: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    position: absolute;
    width: 1px;
}

/*
 * Extends the .visuallyhidden class to allow the element
 * to be focusable when navigated to via the keyboard:
 * https://www.drupal.org/node/897638
 */

.visuallyhidden.focusable:active,
.visuallyhidden.focusable:focus {
    clip: auto;
    height: auto;
    margin: 0;
    overflow: visible;
    position: static;
    width: auto;
}

/*
 * Hide visually and from screen readers, but maintain layout
 */

.invisible {
    visibility: hidden;
}

/*
 * Clearfix: contain floats
 *
 * For modern browsers
 * 1. The space content is one way to avoid an Opera bug when the
 *    `contenteditable` attribute is included anywhere else in the document.
 *    Otherwise it causes space to appear at the top and bottom of elements
 *    that receive the `clearfix` class.
 * 2. The use of `table` rather than `block` is only necessary if using
 *    `:before` to contain the top-margins of child elements.
 */

.clearfix:before,
.clearfix:after {
    content: " "; /* 1 */
    display: table; /* 2 */
}

.clearfix:after {
    clear: both;
}

/* ==========================================================================
   EXAMPLE Media Queries for Responsive Design.
   These examples override the primary ('mobile first') styles.
   Modify as content requires.
   ========================================================================== */

@media only screen and (max-width: 35em) {
    article {
        width: 100%;
    }
}

@media print,
(-webkit-min-device-pixel-ratio: 1.25),
(min-resolution: 1.25dppx),
(min-resolution: 120dpi) {
    /* Style adjustments for high resolution devices */
}
p {
    color: white;
}

div.header{
    background-color: white;
    padding: 1% 1%;
    overflow: auto;
    height:5%;
    position:fixed;
    top: 0; /* lock menubar to top of page */
    width: 100%;
}
div.loginRow {
    float: left;

}

body{
    background-image: url("images/test.jpg");
    background-size: contain;
    background-color: black;
    background-attachment: fixed;
    background-position: center;
    position: relative;
}

h1{
    color: white;
}
h3 {
    color: white;
}

.header button{
    overflow: auto;
    height: 80%;
    width: 10%;
    border: 0;
    display: inline-block;
    box-sizing: border-box;
    float: right;
    background-color: white;
    font-size: 1.2vw;
}

.header button:hover{
    background-color: lightblue;
}
.figure a {
    width: 200px;
    height: 200px;
}


.header img{
    height:60%;
    width: 70%;
    object-fit: contain;
}

.header img:hover{
    background-color: lightblue;
}

.header a{
    width: 10%;
    height: 170%;
    float: right;
}

li {
    display:inline-block;
    float:left;
    padding: 1% 1%;
}
.figure a {
    width: 200px;
    height: 200px;
}

/* POPUP FORM CSS */
.popup-form{
    display: none;
    position: fixed;
    top: 50%;
    left: 50%;
    /* bring your own prefixes */
    transform: translate(-50%, -50%);
}
.popup-form h1{
    color: black;
    padding: 5px;
}

.form-container{
    max-width: 300px;
    background-color: ghostwhite;
    padding: 10px;
    border-radius: 25px;
    border: gray 2px solid;
    text-align: center;
}
.form-container input[type=text],
.form-container input[type=password],
.form-container input[type=email]{
    width: 100%;
    padding-top: 10px;
    padding-bottom: 10px;
    margin: auto;
    background-color: lightgray;
}

.container-button{
    cursor: pointer;
    width: 100%;
    color: white;
    padding: 15px 20px;
    margin-bottom: 5px;
    margin-top: 5px;
    background-color: green;
    border: none;
    opacity: 0.8;
}
#cancelBtn{
    background-color: firebrick;
}
.container-button:hover, #cancelBtn:hover{
    opacity: 1;
}
@media only screen and (max-width: 768px) {
    .header button {
    <!-- placeholder -->
    }
}

.main{
    margin-top: 10%;
}




.popup-form{
    display: none;
    position: fixed;
    top: 50%;
    left: 50%;
    /* bring your own prefixes */
    transform: translate(-50%, -50%);
}
.popup-form h1{
    color: black;
    padding: 5px;
}

.form-container{
    max-width: 300px;
    background-color: ghostwhite;
    padding: 10px;
    border-radius: 25px;
    border: gray 2px solid;
    text-align: center;
}
.form-container input[type=text],
.form-container input[type=password],
.form-container input[type=email]{
    width: 100%;
    padding-top: 10px;
    padding-bottom: 10px;
    margin: auto;
    background-color: lightgray;
}
.container-button{
    cursor: pointer;
    width: 100%;
    color: white;
    padding: 15px 20px;
    margin-bottom: 5px;
    margin-top: 5px;
    background-color: green;
    border: none;
    opacity: 0.8;
}
#cancelBtn{
    background-color: darkred;
}
#cancelLoginBtn{
    background-color: darkred;
}
.container-button:hover, #cancelBtn:hover, #cancelLoginBtn:hover{
    opacity: 1;
}